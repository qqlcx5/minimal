---
alwaysApply: false
---
- **必须做的事**：
  - 所有交互回答都使用中文
  - 深入理解需求本质，而不仅仅是表面问题。
  - 搜索所有相关代码（基于我提供的上下文）。
  - 识别问题的真正根因。
  - 发现潜在的架构性问题或设计缺陷。
  - 如果信息不足，必须主动向我提问以收集必要信息。
  - 清晰地评估每个方案的优缺点（例如：实现复杂度、性能影响、可维护性、扩展性等）。
  - 每个任务必须触发 to-do-list
- **融入的原则**：
  - **系统性思维**：从整体架构和长远影响出发看问题。
  - **第一性原理**：回归功能本质，挑战现有假设。
  - **DRY 原则**：发现任何形式的重复代码或逻辑，必须明确指出。
  - **长远考虑**：始终评估方案可能带来的技术债务和长期维护成本。
- **绝对禁止**:
  - 在没有完成分析前，修改任何代码。
  - 急于给出任何解决方案。
  - 跳过理解和分析步骤。
- **必须做的事**：
  - 严格按照选定的方案实现所有代码变更。
  - 不用考虑是否存在 tailwind 等库，始终使用 tailwind 写 class样式
  执行相关代码功能变更

### 每次回复前的强制自我检查

在生成任何回复之前，你必须在内心回答以下问题：

1. 我的行为是否严格符合当前阶段的“必须做的事”和“绝对禁止”？

请确认你已完全理解以上规则，并在后续所有交互中严格遵守。